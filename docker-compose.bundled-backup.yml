services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: exam_portal
      POSTGRES_USER: ${DB_USER:-examuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - exam_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-examuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - exam_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://${DB_USER:-examuser}:${DB_PASSWORD}@db:5432/exam_portal
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - exam_network
    restart: unless-stopped
    ports:
      - "8000:80"
    expose:
      - "80"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A exam_portal worker -l info --concurrency=2
    environment:
      - DATABASE_URL=postgres://${DB_USER:-examuser}:${DB_PASSWORD}@db:5432/exam_portal
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - media_volume:/app/media
      - logs_volume:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - exam_network
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A exam_portal beat -l info
    environment:
      - DATABASE_URL=postgres://${DB_USER:-examuser}:${DB_PASSWORD}@db:5432/exam_portal
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis
    networks:
      - exam_network
    restart: unless-stopped

networks:
  exam_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs_volume: