# Generated by Django 5.2.4 on 2025-08-01 18:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pdf_extractor', '0010_add_source_type_choices'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MetadataTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Template description')),
                ('exam_type', models.CharField(blank=True, choices=[('upsc', 'UPSC (Civil Services)'), ('ssc', 'SSC (Staff Selection Commission)'), ('banking', 'Banking Exams (SBI, IBPS, RBI)'), ('railway', 'Railway Exams (RRB)'), ('defense', 'Defense Exams (NDA, CDS, AFCAT)'), ('state_psc', 'State PSC'), ('teaching', 'Teaching Exams (CTET, TET, NET)'), ('engineering', 'Engineering Entrance (JEE, GATE)'), ('medical', 'Medical Entrance (NEET, AIIMS)'), ('management', 'Management Entrance (CAT, MAT, XAT)'), ('law', 'Law Entrance (CLAT, LSAT)'), ('judiciary', 'Judicial Services'), ('police', 'Police & Para-military'), ('insurance', 'Insurance Exams (LIC, GIC)'), ('academic', 'Academic/School Level'), ('other', 'Other')], max_length=50)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('subject', models.CharField(blank=True, max_length=100)),
                ('topic', models.CharField(blank=True, max_length=100)),
                ('source_type', models.CharField(blank=True, choices=[('previous_year', 'Previous Year Paper'), ('mock_test', 'Mock Test'), ('sample_paper', 'Sample Paper'), ('practice_set', 'Practice Set'), ('study_material', 'Study Material'), ('question_bank', 'Question Bank'), ('textbook', 'Textbook'), ('notes', 'Study Notes'), ('reference_book', 'Reference Book'), ('online_resource', 'Online Resource'), ('coaching_material', 'Coaching Material'), ('other', 'Other')], max_length=50)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('default_tags', models.JSONField(blank=True, default=list, help_text='Default tags to apply')),
                ('custom_fields', models.JSONField(blank=True, default=dict, help_text='Default custom fields')),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times template has been used')),
                ('is_public', models.BooleanField(default=False, help_text='Allow other users to use this template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'metadata_templates',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_by', 'exam_type'], name='metadata_te_created_016426_idx'), models.Index(fields=['is_public'], name='metadata_te_is_publ_0bd9a6_idx')],
            },
        ),
    ]
