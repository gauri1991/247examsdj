# Generated by Django 5.2.4 on 2025-08-01 16:51

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pdf_extractor', '0008_add_saved_region_model'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='pdfdocument',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict, help_text='Additional custom metadata'),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='description',
            field=models.TextField(blank=True, help_text='Brief description of the document content'),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='exam_name',
            field=models.CharField(blank=True, help_text='Specific exam name (e.g., UPSC CSE Prelims)', max_length=200),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='exam_type',
            field=models.CharField(blank=True, choices=[('upsc', 'UPSC (Civil Services)'), ('ssc', 'SSC (Staff Selection Commission)'), ('banking', 'Banking Exams (SBI, IBPS, RBI)'), ('railway', 'Railway Exams (RRB)'), ('defense', 'Defense Exams (NDA, CDS, AFCAT)'), ('state_psc', 'State PSC'), ('teaching', 'Teaching Exams (CTET, TET, NET)'), ('engineering', 'Engineering Entrance (JEE, GATE)'), ('medical', 'Medical Entrance (NEET, AIIMS)'), ('management', 'Management Entrance (CAT, MAT, XAT)'), ('law', 'Law Entrance (CLAT, LSAT)'), ('judiciary', 'Judicial Services'), ('police', 'Police & Para-military'), ('insurance', 'Insurance Exams (LIC, GIC)'), ('academic', 'Academic/School Level'), ('other', 'Other')], help_text='Type of exam', max_length=50),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='organization',
            field=models.CharField(blank=True, help_text='Conducting organization', max_length=200),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='source_type',
            field=models.CharField(blank=True, help_text='Previous year paper, Mock test, Study material, etc.', max_length=50),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='source_url',
            field=models.URLField(blank=True, help_text='Source URL if available'),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='subject',
            field=models.CharField(blank=True, help_text='Main subject (e.g., General Studies, Mathematics)', max_length=100),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='subtopic',
            field=models.CharField(blank=True, help_text='Subtopic if applicable', max_length=100),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='tags',
            field=models.JSONField(blank=True, default=list, help_text='List of tags for easy search'),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='title',
            field=models.CharField(blank=True, help_text='Document title', max_length=255),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='topic',
            field=models.CharField(blank=True, help_text='Specific topic', max_length=100),
        ),
        migrations.AddField(
            model_name='pdfdocument',
            name='year',
            field=models.IntegerField(blank=True, help_text='Year of exam', null=True),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['exam_type'], name='pdf_documen_exam_ty_caaa91_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['organization'], name='pdf_documen_organiz_832e09_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['year'], name='pdf_documen_year_5afc23_idx'),
        ),
        migrations.AddIndex(
            model_name='pdfdocument',
            index=models.Index(fields=['subject'], name='pdf_documen_subject_144587_idx'),
        ),
    ]
