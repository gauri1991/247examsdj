# Generated by Django 5.2.4 on 2025-07-30 18:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pdf_extractor', '0004_processingstatistics_layout_analysis_used_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RegionReviewSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='in_progress', max_length=20)),
                ('current_page', models.PositiveIntegerField(default=1)),
                ('total_pages', models.PositiveIntegerField()),
                ('pages_reviewed', models.PositiveIntegerField(default=0)),
                ('regions_corrected', models.PositiveIntegerField(default=0)),
                ('regions_approved', models.PositiveIntegerField(default=0)),
                ('regions_rejected', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('session_notes', models.TextField(blank=True)),
                ('estimated_completion_time', models.PositiveIntegerField(blank=True, help_text='Estimated time in minutes', null=True)),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_sessions', to='pdf_extractor.pdfdocument')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'region_review_sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='RegionCorrection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('page_number', models.PositiveIntegerField()),
                ('original_coordinates', models.JSONField(help_text='Original region coordinates and properties')),
                ('corrected_coordinates', models.JSONField(help_text='Corrected region coordinates and properties')),
                ('correction_type', models.CharField(choices=[('resize', 'Resize Region'), ('move', 'Move Region'), ('split', 'Split Region'), ('merge', 'Merge Regions'), ('delete', 'Delete Region'), ('create', 'Create Region'), ('retype', 'Change Region Type')], max_length=20)),
                ('correction_reason', models.TextField(blank=True, help_text='Optional reason for the correction')),
                ('correction_timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('confidence_before', models.FloatField(blank=True, help_text='Confidence score before correction', null=True)),
                ('confidence_after', models.FloatField(blank=True, help_text='Confidence score after correction', null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_corrections', to=settings.AUTH_USER_MODEL)),
                ('corrected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_corrections', to=settings.AUTH_USER_MODEL)),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_corrections', to='pdf_extractor.pdfdocument')),
            ],
            options={
                'db_table': 'region_corrections',
                'ordering': ['-correction_timestamp'],
                'indexes': [models.Index(fields=['pdf_document', 'page_number'], name='region_corr_pdf_doc_799099_idx'), models.Index(fields=['correction_type'], name='region_corr_correct_0ecbe3_idx'), models.Index(fields=['corrected_by'], name='region_corr_correct_ed0f3f_idx')],
            },
        ),
    ]
